{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/main.ts","src/types.ts","src/util.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","types_1","util_1","generateIdeology","document","getElementById","disabled","ideologyParts","prefixCount","getRandomIntInclusive","push","prefixes","Math","floor","random","heads","ideologyName","forEach","part","concat","name","button","isAnarchist","includes","isNational","colorSet","Set","symbolSet","colors","color","add","symbols","symbol","size","has","Color","BLACK","delete","ctx","getContext","fillStyle","fillRect","colorArray","Array","from","pop","h","l","shuffle","FlagType","__LENGTH","DIAGONAL_SPLIT","beginPath","moveTo","lineTo","fill","STRIPE","HORIZONTAIL_SPLIT","symbolArray","symbolImage_1","Image","addEventListener","drawImage","arc","PI","src","getFilename","YELLOW","WHITE","drawFlag","textContent","onclick","IdeologyPart","this","slice","RED","BLUE","GREEN","ORANGE","PINK","PURPLE","TEAL","s","Symbol","prototype","filename","ALGIZ","HS_CN","HS_CPUSA","HS_USSR","JUCHE","SWASTIKA","STAR_DAVID","DHARMA","CROSS","LABRYS","STAR_CRESCENT","FASCES","TROTSKY","CROWN","SCALES","SNEK","DOVE","min","max","ceil","getRandomItem","set","items","j","_a","getAverageLightness","data","getImageData","g","b"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {\n    IdeologyPart,\n    Color,\n    Symbol,\n    FlagType,\n    prefixes,\n    heads,\n} from \"./types\";\nimport {\n    getRandomIntInclusive,\n    shuffle,\n    getAverageLightness\n} from \"./util\";\n\nfunction drawFlag(ideologyParts: IdeologyPart[], ideologyName: string) {\n    const button = <HTMLButtonElement>document.getElementById(\"regen\");\n    const isAnarchist = (ideologyName.includes(\"anarch\") || ideologyName.includes(\"mutualism\"));\n    const isNational = (ideologyName.includes(\"national\") && !ideologyName.includes(\"international\"));\n    let colorSet = new Set<Color>();\n    let symbolSet = new Set<Symbol>();\n    ideologyParts.forEach(part => {\n        part.colors.forEach(color => {\n            colorSet.add(color);\n        });\n        part.symbols.forEach(symbol => {\n            symbolSet.add(symbol);\n        });\n    });\n\n    if (isAnarchist && colorSet.size > 1 && colorSet.has(Color.BLACK)) {\n        colorSet.delete(Color.BLACK);\n    }\n\n    let canvas = <HTMLCanvasElement>document.getElementById(\"flagCanvas\");\n    let ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, 600, 400);\n\n    let colorArray = Array.from(colorSet);\n\n    if ((colorArray.length == 2 && symbolSet.size > 0) || (colorArray.length == 1)) {\n        const color = colorArray.pop();\n        ctx.fillStyle = `hsl(${color.h}, 100%, ${color.l}%)`;\n        ctx.fillRect(0, 0, 600, 400);\n    } else if (colorArray.length >= 2) {\n        shuffle(colorArray);\n        let color = colorArray.pop();\n        ctx.fillStyle = `hsl(${color.h}, 100%, ${color.l}%)`;\n        ctx.fillRect(0, 0, 600, 400);\n\n        color = colorArray.pop();\n        ctx.fillStyle = `hsl(${color.h}, 100%, ${color.l}%)`;\n        const flagType: FlagType = getRandomIntInclusive(0, FlagType.__LENGTH - 1);\n        switch (flagType) {\n            case FlagType.DIAGONAL_SPLIT: {\n                ctx.beginPath();\n                ctx.moveTo(0, 0);\n                ctx.lineTo(600, 0);\n                ctx.lineTo(600, 400);\n                ctx.fill();\n                break;\n            }\n            case FlagType.STRIPE: {\n                ctx.fillRect(0, 80, 600, 80);\n                ctx.fillRect(0, 240, 600, 80);\n                break;\n            }\n            case FlagType.HORIZONTAIL_SPLIT: {\n                ctx.fillRect(0, 0, 600, 200);\n                break;\n            }\n        }\n    }\n\n    if (isAnarchist) {\n        ctx.fillStyle = \"black\";\n        ctx.beginPath();\n        ctx.moveTo(0, 400);\n        ctx.lineTo(600, 0);\n        ctx.lineTo(600, 400);\n        ctx.fill();\n    }\n\n    let symbolArray = Array.from(symbolSet);\n    shuffle(symbolArray);\n    if (symbolArray.length > 0) {\n        const symbolImage = new Image();\n        symbolImage.addEventListener('load', function () {\n            ctx.drawImage(symbolImage, 0, 0);\n            button.disabled = false;\n        }, false);\n        if (isNational) { // draw black symbol in white circle\n            ctx.fillStyle = \"white\";\n            ctx.beginPath();\n            ctx.arc(300, 200, 160, 0, Math.PI * 2, false);\n            ctx.fill();\n\n            symbolImage.src = \"./images/symbol/\".concat(symbolArray[0].getFilename(Color.BLACK));\n        } else if (colorArray.length > 0) {\n            symbolImage.src = \"./images/symbol/\".concat(symbolArray[0].getFilename(colorArray.pop()));\n        } else {\n            if (isAnarchist || (colorSet.size > 0 && !(colorSet.has(Color.YELLOW) || colorSet.has(Color.WHITE)))) {\n                symbolImage.src = \"./images/symbol/\".concat(symbolArray[0].getFilename(Color.WHITE));\n            } else {\n                symbolImage.src = \"./images/symbol/\".concat(symbolArray[0].getFilename(Color.BLACK));\n            }\n        }\n    } else {\n        button.disabled = false;\n    }\n}\n\nfunction generateIdeology() {\n    const button = <HTMLButtonElement>document.getElementById(\"regen\");\n    button.disabled = true;\n\n    let ideologyParts: IdeologyPart[] = [];\n    const prefixCount = getRandomIntInclusive(1, 3);\n\n    for (let i = 0; i < prefixCount; i++) {\n        ideologyParts.push(prefixes[Math.floor(Math.random() * prefixes.length)])\n    }\n\n    ideologyParts.push(heads[Math.floor(Math.random() * heads.length)])\n\n    let ideologyName = \"\";\n    ideologyParts.forEach(part => {\n        ideologyName = ideologyName.concat(part.name);\n    });\n\n    if (Math.random() < 0.01) {\n        ideologyName = ideologyName.concat(\" with chinese characteristics\");\n    }\n\n    drawFlag(ideologyParts, ideologyName);\n\n    document.getElementById(\"ideologyLabel\").textContent = ideologyName;\n}\n\n\n\ndocument.getElementById(\"regen\").onclick = generateIdeology;\ngenerateIdeology();","// ideology prefix or head plus associated colors and symbol\nclass IdeologyPart {\n    constructor(public name: string, public colors: Color[] = [], public symbols: Symbol[] = []) {\n        this.name = (name.slice(-1) === \"-\" ? name : name.concat(\" \"));\n        this.colors = colors;\n        this.symbols = symbols;\n    }\n}\n\n// HSL color\nclass Color {\n    constructor(public h: number, public s: number = 100, public l: number) {\n        this.h = h;\n        this.s = s;\n        this.l = l;\n    }\n    public static readonly RED = new Color(0, 100, 50);\n    public static readonly BLUE = new Color(240, 100, 50);\n    public static readonly GREEN = new Color(120, 100, 50);\n    public static readonly ORANGE = new Color(39, 100, 50);\n    public static readonly PINK = new Color(330, 100, 71);\n    public static readonly PURPLE = new Color(300, 100, 25);\n    public static readonly YELLOW = new Color(60, 100, 50);\n    public static readonly TEAL = new Color(180, 100, 25);\n    public static readonly WHITE = new Color(0, 0, 100);\n    public static readonly BLACK = new Color(0, 0, 0);\n}\n\nclass Symbol {\n    constructor(private filename: string) { this.filename = filename }\n    getFilename(c: Color) {\n        switch (c) {\n            case Color.RED: return this.filename.concat(\"_red.png\");\n            case Color.BLUE: return this.filename.concat(\"_blue.png\");\n            case Color.GREEN: return this.filename.concat(\"_green.png\");\n            case Color.ORANGE: return this.filename.concat(\"_orange.png\");\n            case Color.PINK: return this.filename.concat(\"_pink.png\");\n            case Color.PURPLE: return this.filename.concat(\"_purple.png\");\n            case Color.YELLOW: return this.filename.concat(\"_yellow.png\");\n            case Color.TEAL: return this.filename.concat(\"_teal.png\");\n            case Color.WHITE: return this.filename.concat(\"_white.png\");\n            case Color.BLACK: return this.filename.concat(\"_black.png\");\n        }\n    }\n\n    public static readonly ALGIZ = new Symbol(\"algiz\");\n    public static readonly HS_CN = new Symbol(\"hs_cn\");\n    public static readonly HS_CPUSA = new Symbol(\"hs_cpusa\");\n    public static readonly HS_USSR = new Symbol(\"hs_ussr\");\n    public static readonly JUCHE = new Symbol(\"juche\");\n    public static readonly SWASTIKA = new Symbol(\"swastika\");\n    public static readonly STAR_DAVID = new Symbol(\"david\");\n    public static readonly DHARMA = new Symbol(\"dharma\");\n    public static readonly CROSS = new Symbol(\"cross\");\n    public static readonly LABRYS = new Symbol(\"labrys\");\n    public static readonly STAR_CRESCENT = new Symbol(\"starcrescent\");\n    public static readonly FASCES = new Symbol(\"fasces\");\n    public static readonly TROTSKY = new Symbol(\"trotsky\");\n    public static readonly CROWN = new Symbol(\"crown\");\n    public static readonly SCALES = new Symbol(\"scales\");\n    public static readonly SNEK = new Symbol(\"snek\");\n    public static readonly DOVE = new Symbol(\"dove\");\n}\n\nenum FlagType {\n    STRIPE,\n    DIAGONAL_SPLIT,\n    HORIZONTAIL_SPLIT,\n    __LENGTH\n}\n\nconst prefixes = [\n    new IdeologyPart(\"left-\", [Color.RED, Color.BLACK]),\n    new IdeologyPart(\"right-\", [Color.YELLOW, Color.BLUE]),\n    new IdeologyPart(\"proto-\"),\n    new IdeologyPart(\"post-\"),\n    new IdeologyPart(\"neo-\"),\n    new IdeologyPart(\"paleo-\"),\n    new IdeologyPart(\"marxism-\", [Color.RED], [Symbol.HS_CN, Symbol.HS_USSR]),\n    new IdeologyPart(\"leninism-\", [Color.RED], [Symbol.HS_USSR]),\n    new IdeologyPart(\"eco-\", [Color.GREEN]),\n    new IdeologyPart(\"techno-\"),\n    new IdeologyPart(\"crypto-\"),\n    new IdeologyPart(\"anarcho-\", [Color.BLACK]),\n    new IdeologyPart(\"anarcha-\", [Color.PURPLE]),\n    new IdeologyPart(\"alt-\"),\n    new IdeologyPart(\"cyber-\"),\n    new IdeologyPart(\"ultra-\"),\n    new IdeologyPart(\"judeo-\", [], [Symbol.STAR_DAVID]),\n    new IdeologyPart(\"trans-exclusionary\", [Color.PURPLE], [Symbol.LABRYS]),\n    new IdeologyPart(\"classical\"),\n    new IdeologyPart(\"orthodox\"),\n    new IdeologyPart(\"post-left\"),\n    new IdeologyPart(\"left\", [Color.RED]),\n    new IdeologyPart(\"right\"),\n    new IdeologyPart(\"gender-abolitionist\", [Color.PURPLE, Color.PINK]),\n    new IdeologyPart(\"libertarian\", [Color.YELLOW], [Symbol.SNEK]),\n    new IdeologyPart(\"conservative\", [Color.RED]),\n    new IdeologyPart(\"egoist\", [Color.TEAL]),\n    new IdeologyPart(\"authoritarian\"),\n    new IdeologyPart(\"christian\", [Color.ORANGE], [Symbol.CROSS]),\n    new IdeologyPart(\"islamic\", [], [Symbol.STAR_CRESCENT]),\n    new IdeologyPart(\"buddhist\", [], [Symbol.DHARMA]),\n    new IdeologyPart(\"green\", [Color.GREEN]),\n    new IdeologyPart(\"individualist\", [Color.YELLOW]),\n    new IdeologyPart(\"collectivist\", [Color.RED]),\n    new IdeologyPart(\"democratic\", [Color.BLUE], [Symbol.SCALES]),\n    new IdeologyPart(\"radical\", [Color.RED]),\n    new IdeologyPart(\"utopian\"),\n    new IdeologyPart(\"scientific\"),\n    new IdeologyPart(\"egalitarian\"),\n    new IdeologyPart(\"hegelian\"),\n    new IdeologyPart(\"marxist\", [Color.RED]),\n    new IdeologyPart(\"primitive\", [Color.GREEN]),\n    new IdeologyPart(\"liberal\", [Color.YELLOW], [Symbol.DOVE]),\n    new IdeologyPart(\"fascist\", [], [Symbol.FASCES]),\n    new IdeologyPart(\"state\"),\n    new IdeologyPart(\"national\", [Color.RED]),\n    new IdeologyPart(\"international\"),\n    new IdeologyPart(\"queer\", [Color.PINK]),\n    new IdeologyPart(\"pagan\", [], [Symbol.ALGIZ])\n];\nconst heads = [\n    new IdeologyPart(\"anarchism\", [Color.BLACK]),\n    new IdeologyPart(\"communism\", [Color.RED], [Symbol.HS_CN, Symbol.HS_USSR, Symbol.HS_CPUSA]),\n    new IdeologyPart(\"socialism\", [Color.RED], [Symbol.HS_CN, Symbol.HS_USSR, Symbol.HS_CPUSA]),\n    new IdeologyPart(\"maoism\", [Color.RED, Color.YELLOW], [Symbol.HS_CN]),\n    new IdeologyPart(\"juche\", [Color.RED, Color.YELLOW], [Symbol.JUCHE]),\n    new IdeologyPart(\"marxism\", [Color.RED]),\n    new IdeologyPart(\"leninism\", [Color.RED, Color.YELLOW], [Symbol.HS_USSR]),\n    new IdeologyPart(\"trotskyism\", [Color.RED], [Symbol.TROTSKY]),\n    new IdeologyPart(\"deng xiaoping thought\", [Color.RED, Color.YELLOW], [Symbol.HS_CN]),\n    new IdeologyPart(\"posadism\", [Color.RED], [Symbol.TROTSKY]),\n    new IdeologyPart(\"corporatism\", [Color.RED]),\n    new IdeologyPart(\"fascism\", [], [Symbol.FASCES]),\n    new IdeologyPart(\"nazism\", [Color.RED], [Symbol.SWASTIKA]),\n    new IdeologyPart(\"monarchism\", [Color.PURPLE], [Symbol.CROWN]),\n    new IdeologyPart(\"democracy\", [Color.BLUE]),\n    new IdeologyPart(\"liberalism\", [Color.YELLOW], [Symbol.DOVE]),\n    new IdeologyPart(\"libertarianism\", [Color.YELLOW]),\n    new IdeologyPart(\"centrism\", [Color.WHITE]),\n    new IdeologyPart(\"primitivism\", [Color.GREEN]),\n    new IdeologyPart(\"anarchism\", [Color.BLACK]),\n    new IdeologyPart(\"mutualism\", [Color.ORANGE]),\n    new IdeologyPart(\"individualism\", [Color.YELLOW]),\n]\n\nexport {\n    IdeologyPart,\n    Color,\n    Symbol,\n    FlagType,\n    prefixes,\n    heads\n};","function getRandomIntInclusive(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomItem<T>(set: Set<T>): T {\n    const items = Array.from(set);\n    return items[Math.floor(Math.random() * items.length)];\n}\n\nfunction shuffle<T>(a: Array<T>) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n}\n\nfunction getAverageLightness(ctx: CanvasRenderingContext2D): number {\n    const WIDTH = 600,\n        HEIGHT = 400;\n\n    const imageData = ctx.getImageData(0, 0, 600, 400);\n    const data = imageData.data;\n    let r = 0,\n        g = 0,\n        b = 0,\n        l = 0;\n\n    for (let i = 0; i < data.length; i += 4) {\n        r += data[i];\n        g += data[i + 1];\n        b += data[i + 2];\n        let x_max = Math.max(r, g, b),\n            x_min = Math.min(r, b, b);\n        l += (x_max + x_min) / 2;\n    }\n\n    return (l / (WIDTH * HEIGHT)) / 512;\n}\n\nexport {\n    getRandomIntInclusive,\n    getRandomItem,\n    shuffle,\n    getAverageLightness\n};"]}