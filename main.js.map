{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/main.ts","src/types.ts","src/util.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","types_1","util_1","generateIdeology","ideologyParts","prefixCount","getRandomIntInclusive","push","prefixes","Math","floor","random","heads","ideologyName","forEach","part","concat","name","isAnarchist","includes","colorSet","Set","colors","color","add","size","has","Color","BLACK","delete","ctx","document","getElementById","getContext","fillStyle","fillRect","values","h","l","colorArray","Array","from","shuffle","slice","FlagType","__LENGTH","DIAGONAL_SPLIT","moveTo","lineTo","fill","STRIPE","drawFlag","textContent","onclick","IdeologyPart","symbols","this","RED","BLUE","GREEN","ORANGE","PINK","PURPLE","YELLOW","TEAL","WHITE","s","min","max","ceil","getRandomItem","set","items","j","_a"],"mappings":"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","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import {\n    IdeologyPart,\n    Color,\n    FlagType,\n    prefixes,\n    heads,\n} from \"./types\";\nimport {\n    getRandomIntInclusive,\n    shuffle\n} from \"./util\";\n\nfunction drawFlag(ideologyParts: IdeologyPart[], ideologyName: string) {\n    const isAnarchist = (ideologyName.includes(\"anarch\") || ideologyName.includes(\"mutualism\"));\n    let colorSet = new Set<Color>();\n    ideologyParts.forEach(part => {\n        part.colors.forEach(color => {\n            colorSet.add(color);\n        });\n    });\n\n    if (isAnarchist && colorSet.size > 1 && colorSet.has(Color.BLACK)) {\n        colorSet.delete(Color.BLACK);\n    }\n\n    let canvas = <HTMLCanvasElement>document.getElementById(\"flagCanvas\");\n    let ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, 600, 400);\n\n    if (colorSet.size == 1) {\n        const color = colorSet.values[0];\n        ctx.fillStyle = `hsl(${color.h}, 100%, ${color.l}%)`;\n        ctx.fillRect(0, 0, 600, 400);\n    } else {\n        let colorArray = Array.from(colorSet);\n        shuffle(colorArray);\n        colorArray = colorArray.slice(0, 2);\n        ctx.fillStyle = `hsl(${colorArray[0].h}, 100%, ${colorArray[0].l}%)`;\n        ctx.fillRect(0, 0, 600, 400);\n\n        ctx.fillStyle = `hsl(${colorArray[1].h}, 100%, ${colorArray[1].l}%)`;\n        const flagType: FlagType = getRandomIntInclusive(0, FlagType.__LENGTH - 1);\n        switch (flagType) {\n            case FlagType.DIAGONAL_SPLIT: {\n                ctx.moveTo(0, 0);\n                ctx.lineTo(600, 400);\n                ctx.lineTo(600, 0);\n                ctx.fill();\n                break;\n            }\n            case FlagType.STRIPE: {\n                for (let i = 0; i < 2; i++) {\n                    ctx.fillRect(0, i * 80, 600, 80);\n                }\n            }\n        }\n    }\n\n    if (isAnarchist) {\n        ctx.fillStyle = \"black\";\n        ctx.moveTo(0, 400);\n        ctx.lineTo(600, 0);\n        ctx.lineTo(600, 400);\n        ctx.fill();\n    }\n}\n\nfunction generateIdeology() {\n    let ideologyParts: IdeologyPart[] = [];\n    const prefixCount = getRandomIntInclusive(1, 3);\n\n    for (let i = 0; i < prefixCount; i++) {\n        ideologyParts.push(prefixes[Math.floor(Math.random() * prefixes.length)])\n    }\n\n    ideologyParts.push(heads[Math.floor(Math.random() * heads.length)])\n\n    let ideologyName = \"\";\n    ideologyParts.forEach(part => {\n        ideologyName = ideologyName.concat(part.name);\n    });\n\n    if (Math.random() < 0.01) {\n        ideologyName = ideologyName.concat(\" with chinese characteristics\");\n    }\n\n    drawFlag(ideologyParts, ideologyName);\n\n    document.getElementById(\"ideologyLabel\").textContent = ideologyName;\n}\n\n\n\ndocument.getElementById(\"regen\").onclick = generateIdeology;\ngenerateIdeology();","// ideology prefix or head plus associated colors and symbol\nclass IdeologyPart {\n    constructor(public name: string, public colors: Color[] = [], public symbols = []) {\n        this.name = (name.slice(-1) === \"-\" ? name : name.concat(\" \"));\n        this.colors = colors;\n        this.symbols = symbols;\n    }\n}\n\n// HSL color\nclass Color {\n    constructor(public h: number, public s: number = 100, public l: number) {\n        this.h = h;\n        this.s = s;\n        this.l = l;\n    }\n    public static readonly RED = new Color(0, 100, 50);\n    public static readonly BLUE = new Color(240, 100, 50);\n    public static readonly GREEN = new Color(120, 100, 50);\n    public static readonly ORANGE = new Color(39, 100, 50);\n    public static readonly PINK = new Color(330, 100, 71);\n    public static readonly PURPLE = new Color(300, 100, 71);\n    public static readonly YELLOW = new Color(60, 100, 71);\n    public static readonly TEAL = new Color(180, 100, 25);\n    public static readonly WHITE = new Color(0, 0, 100);\n    public static readonly BLACK = new Color(0, 0, 0);\n}\n\nenum FlagType {\n    STRIPE,\n    DIAGONAL_SPLIT,\n    __LENGTH\n}\n\nconst prefixes = [\n    new IdeologyPart(\"anti-\"),\n    new IdeologyPart(\"left-\", [Color.RED, Color.BLACK]),\n    new IdeologyPart(\"right-\", [Color.YELLOW, Color.BLUE]),\n    new IdeologyPart(\"proto-\"),\n    new IdeologyPart(\"post-\"),\n    new IdeologyPart(\"neo-\"),\n    new IdeologyPart(\"paleo-\"),\n    new IdeologyPart(\"marxism-\", [Color.RED]),\n    new IdeologyPart(\"leninism-\", [Color.RED]),\n    new IdeologyPart(\"eco-\", [Color.GREEN]),\n    new IdeologyPart(\"techno-\"),\n    new IdeologyPart(\"crypto-\"),\n    new IdeologyPart(\"anarcho-\", [Color.BLACK]),\n    new IdeologyPart(\"anarcha-\", [Color.PURPLE]),\n    new IdeologyPart(\"alt-\"),\n    new IdeologyPart(\"cyber-\"),\n    new IdeologyPart(\"ultra-\"),\n    new IdeologyPart(\"judeo-\"),\n    new IdeologyPart(\"trans-exclusionary\", [Color.PURPLE]),\n    new IdeologyPart(\"classical\"),\n    new IdeologyPart(\"orthodox\"),\n    new IdeologyPart(\"post-left\"),\n    new IdeologyPart(\"left\", [Color.RED]),\n    new IdeologyPart(\"right\"),\n    new IdeologyPart(\"gender-abolitionist\", [Color.PURPLE, Color.PINK]),\n    new IdeologyPart(\"libertarian\", [Color.YELLOW]),\n    new IdeologyPart(\"conservative\", [Color.RED]),\n    new IdeologyPart(\"egoist\", [Color.TEAL]),\n    new IdeologyPart(\"authoritarian\"),\n    new IdeologyPart(\"christian\", [Color.ORANGE]),\n    new IdeologyPart(\"islamic\"),\n    new IdeologyPart(\"buddhist\"),\n    new IdeologyPart(\"green\", [Color.GREEN]),\n    new IdeologyPart(\"individualist\", [Color.YELLOW]),\n    new IdeologyPart(\"collectivist\", [Color.RED]),\n    new IdeologyPart(\"democratic\", [Color.BLUE]),\n    new IdeologyPart(\"radical\", [Color.RED]),\n    new IdeologyPart(\"utopian\"),\n    new IdeologyPart(\"scientific\"),\n    new IdeologyPart(\"egalitarian\"),\n    new IdeologyPart(\"hegelian\"),\n    new IdeologyPart(\"marxist\", [Color.RED]),\n    new IdeologyPart(\"primitive\", [Color.GREEN]),\n    new IdeologyPart(\"liberal\", [Color.RED]),\n    new IdeologyPart(\"fascist\"),\n    new IdeologyPart(\"state\"),\n    new IdeologyPart(\"national\", [Color.RED]),\n    new IdeologyPart(\"international\"),\n    new IdeologyPart(\"queer\", [Color.PINK]),\n];\nconst heads = [\n    new IdeologyPart(\"anarchism\", [Color.BLACK]),\n    new IdeologyPart(\"communism\", [Color.RED]),\n    new IdeologyPart(\"socialism\", [Color.RED]),\n    new IdeologyPart(\"maoism\", [Color.RED]),\n    new IdeologyPart(\"juche\", [Color.RED]),\n    new IdeologyPart(\"marxism\", [Color.RED]),\n    new IdeologyPart(\"leninism\", [Color.RED]),\n    new IdeologyPart(\"trotskyism\", [Color.RED]),\n    new IdeologyPart(\"deng xiaoping thought\", [Color.RED]),\n    new IdeologyPart(\"posadism\", [Color.RED]),\n    new IdeologyPart(\"corporatism\", [Color.RED]),\n    new IdeologyPart(\"fascism\", [Color.RED]),\n    new IdeologyPart(\"monarchism\", [Color.PURPLE]),\n    new IdeologyPart(\"democracy\", [Color.BLUE]),\n    new IdeologyPart(\"liberalism\", [Color.YELLOW]),\n    new IdeologyPart(\"libertarianism\", [Color.YELLOW]),\n    new IdeologyPart(\"centrism\", [Color.WHITE]),\n    new IdeologyPart(\"primitivism\", [Color.GREEN]),\n    new IdeologyPart(\"anarchism\", [Color.BLACK]),\n    new IdeologyPart(\"mutualism\", [Color.ORANGE]),\n    new IdeologyPart(\"individualism\", [Color.YELLOW]),\n]\n\nexport {\n    IdeologyPart,\n    Color,\n    FlagType,\n    prefixes,\n    heads\n};","function getRandomIntInclusive(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomItem<T>(set: Set<T>): T {\n    const items = Array.from(set);\n    return items[Math.floor(Math.random() * items.length)];\n}\n\nfunction shuffle<T>(a: Array<T>) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n}\nexport {\n    getRandomIntInclusive,\n    getRandomItem,\n    shuffle\n};"]}